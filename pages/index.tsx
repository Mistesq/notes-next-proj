import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Grid, Box, Button, IconButton } from '@mui/material';
import AddIcon from '@mui/icons-material/Add';
import styles from '../styles/Home.module.css'
import { useEffect, useState} from 'react'
import { nanoid } from 'nanoid'
import Noteslist from './../components/NotesList';
import Search from './../components/Search';
import AddNote from '../components/AddNote';
import EditNote from '../components/EditNote';

type newNotes = {
  id: string,
  text: string,
  date: string
}

const Home: NextPage = () => {
  const [showAddNote, setShowAddNote] = useState<boolean>(false)
  const [notes, setNotes] = useState<Array<newNotes>>([{
    id: "EkhwqqmsRwlsObUdPjElT",
    text: "initial note",
    date: "28.12.2021"
  }])
  const [currentNote, setCurrentNote] = useState<newNotes>({
    id: "EkhwqqmsRwlsObUdPjElT",
    text: "initial note",
    date: "28.12.2021"
  })
	const [searchText, setSearchText] = useState('')
	// useEffect(()=>{
	// 	// const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'))
    
	// 	if(savedNotes)
	// 	{
	// 		setNotes(savedNotes)
	// 	}
	// },[])

	const addNote = (text:string) => {
		const date = new Date()
		const newNote:newNotes = {
			id:nanoid(),
			text:text,
			date:date.toLocaleDateString()
		}
		const newNotes:Array<newNotes> = [...notes, newNote]
		setNotes(newNotes)
    toggleAddNote(false)
	}

  const editNote = (noteId:string) => {
    setShowAddNote(false)
    const note = notes.filter((note)=> note.id === noteId)
    console.log('note', note)
		setCurrentNote(note[0])
	}

	const deleteNote = (id:string) => {
		const newNotes = notes.filter((note)=> note.id !== id)
		setNotes(newNotes)
	}

  const toggleAddNote = (state:boolean) => {

    setShowAddNote(state)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      
        <main className={styles.main}>
          <h1 className={styles.title}>
            Note app
          </h1>
          <Box sx={{ 
            display: 'flex', 
            alignItems: 'baseline', 
            justifyContent: 'flex-end',
            my: 1.5
            }}>
            <Button sx={{ mx: 1.5}} variant="contained" onClick={()=>toggleAddNote(true)} endIcon={<AddIcon />}>
              Add note
            </Button>
            <Search handleSearchNote={setSearchText} />
          </Box>
          <Grid container spacing={2}>
            <Grid item xs={4}>
              <Noteslist notes={notes.filter((note)=> note.text.toLowerCase().includes(searchText))} currentNoteId={currentNote.id} handleEdit={editNote} handleDelete={deleteNote} />
            </Grid>
            <Grid item xs={8}>
              {!showAddNote ?
                <EditNote handleSave={addNote} handleEdit={addNote} handleDelete={deleteNote} note={currentNote}/>
              : <AddNote handleSave={addNote} handleEdit={addNote} handleDelete={deleteNote}/>
            }
            </Grid>
          </Grid>
        </main>
      

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home

